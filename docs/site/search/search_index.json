{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Telegram Automation Documentation Selamat datang di dokumentasi Telegram Automation! Aplikasi ini memungkinkan Anda untuk mengirim pesan otomatis ke grup-grup Telegram dengan penjadwalan yang fleksibel. Fitur Utama Manajemen Pesan : Buat dan kelola template pesan yang akan dikirim Manajemen Grup : Kelola daftar grup Telegram target Penjadwalan : Atur jadwal pengiriman pesan secara otomatis Blacklist : Kelola daftar grup yang dikecualikan dari pengiriman Autentikasi : Sistem login yang aman untuk mengakses aplikasi Arsitektur Aplikasi Aplikasi ini terdiri dari dua komponen utama: Backend (FastAPI) : API server yang menangani logika bisnis dan database Frontend (React) : Antarmuka pengguna untuk mengelola aplikasi Dokumentasi Installation - Panduan instalasi dan setup Usage - Panduan penggunaan aplikasi Backend API Docs - Dokumentasi API backend yang detail Kontribusi Jika Anda ingin berkontribusi pada proyek ini, silakan buat pull request atau laporkan issue di repository GitHub.","title":"Home"},{"location":"#telegram-automation-documentation","text":"Selamat datang di dokumentasi Telegram Automation! Aplikasi ini memungkinkan Anda untuk mengirim pesan otomatis ke grup-grup Telegram dengan penjadwalan yang fleksibel.","title":"Telegram Automation Documentation"},{"location":"#fitur-utama","text":"Manajemen Pesan : Buat dan kelola template pesan yang akan dikirim Manajemen Grup : Kelola daftar grup Telegram target Penjadwalan : Atur jadwal pengiriman pesan secara otomatis Blacklist : Kelola daftar grup yang dikecualikan dari pengiriman Autentikasi : Sistem login yang aman untuk mengakses aplikasi","title":"Fitur Utama"},{"location":"#arsitektur-aplikasi","text":"Aplikasi ini terdiri dari dua komponen utama: Backend (FastAPI) : API server yang menangani logika bisnis dan database Frontend (React) : Antarmuka pengguna untuk mengelola aplikasi","title":"Arsitektur Aplikasi"},{"location":"#dokumentasi","text":"Installation - Panduan instalasi dan setup Usage - Panduan penggunaan aplikasi Backend API Docs - Dokumentasi API backend yang detail","title":"Dokumentasi"},{"location":"#kontribusi","text":"Jika Anda ingin berkontribusi pada proyek ini, silakan buat pull request atau laporkan issue di repository GitHub.","title":"Kontribusi"},{"location":"backend_api_docs/","text":"Backend API Documentation Dokumentasi ini menjelaskan API endpoints yang tersedia di backend Telegram Automation. Akses Dokumentasi API Backend Telegram Automation menggunakan FastAPI yang secara otomatis menghasilkan dokumentasi API interaktif. Anda dapat mengakses dokumentasi ini melalui: Swagger UI Akses: http://127.0.0.1:8000/docs Swagger UI menyediakan antarmuka interaktif untuk menjelajahi dan menguji API endpoints. Anda dapat: - Melihat semua endpoint yang tersedia - Melihat parameter yang diperlukan untuk setiap endpoint - Menguji endpoint langsung dari browser - Melihat contoh response Redoc Akses: http://127.0.0.1:8000/redoc Redoc menyediakan dokumentasi API yang lebih bersih dan mudah dibaca dengan: - Tampilan yang lebih terstruktur - Navigasi yang mudah - Dokumentasi yang detail untuk setiap endpoint Dokumentasi Kode Backend (Sphinx) Untuk dokumentasi kode backend yang lebih detail, termasuk docstrings dan struktur internal, Anda dapat mengakses dokumentasi Sphinx yang telah dibuat: Lokasi: backend/docs/build/html/index.html Dokumentasi Sphinx ini mencakup: - Dokumentasi untuk semua modul Python - Docstrings dari fungsi dan kelas - Struktur arsitektur backend - Detail implementasi services dan utilities Endpoint Utama Berikut adalah ringkasan endpoint utama yang tersedia: Authentication POST /auth/login - Login pengguna POST /auth/register - Registrasi pengguna baru Messages GET /messages/ - Mendapatkan daftar pesan POST /messages/ - Membuat pesan baru PUT /messages/{id} - Mengupdate pesan DELETE /messages/{id} - Menghapus pesan Groups GET /groups/ - Mendapatkan daftar grup POST /groups/ - Menambah grup baru PUT /groups/{id} - Mengupdate grup DELETE /groups/{id} - Menghapus grup Scheduler GET /scheduler/ - Mendapatkan daftar jadwal POST /scheduler/ - Membuat jadwal baru PUT /scheduler/{id} - Mengupdate jadwal DELETE /scheduler/{id} - Menghapus jadwal Blacklist GET /blacklist/ - Mendapatkan daftar blacklist POST /blacklist/ - Menambah ke blacklist DELETE /blacklist/{id} - Menghapus dari blacklist Untuk detail lengkap tentang parameter, response, dan contoh penggunaan, silakan akses dokumentasi Swagger UI atau Redoc yang disebutkan di atas.","title":"Backend API Docs (Sphinx)"},{"location":"backend_api_docs/#backend-api-documentation","text":"Dokumentasi ini menjelaskan API endpoints yang tersedia di backend Telegram Automation.","title":"Backend API Documentation"},{"location":"backend_api_docs/#akses-dokumentasi-api","text":"Backend Telegram Automation menggunakan FastAPI yang secara otomatis menghasilkan dokumentasi API interaktif. Anda dapat mengakses dokumentasi ini melalui:","title":"Akses Dokumentasi API"},{"location":"backend_api_docs/#swagger-ui","text":"Akses: http://127.0.0.1:8000/docs Swagger UI menyediakan antarmuka interaktif untuk menjelajahi dan menguji API endpoints. Anda dapat: - Melihat semua endpoint yang tersedia - Melihat parameter yang diperlukan untuk setiap endpoint - Menguji endpoint langsung dari browser - Melihat contoh response","title":"Swagger UI"},{"location":"backend_api_docs/#redoc","text":"Akses: http://127.0.0.1:8000/redoc Redoc menyediakan dokumentasi API yang lebih bersih dan mudah dibaca dengan: - Tampilan yang lebih terstruktur - Navigasi yang mudah - Dokumentasi yang detail untuk setiap endpoint","title":"Redoc"},{"location":"backend_api_docs/#dokumentasi-kode-backend-sphinx","text":"Untuk dokumentasi kode backend yang lebih detail, termasuk docstrings dan struktur internal, Anda dapat mengakses dokumentasi Sphinx yang telah dibuat: Lokasi: backend/docs/build/html/index.html Dokumentasi Sphinx ini mencakup: - Dokumentasi untuk semua modul Python - Docstrings dari fungsi dan kelas - Struktur arsitektur backend - Detail implementasi services dan utilities","title":"Dokumentasi Kode Backend (Sphinx)"},{"location":"backend_api_docs/#endpoint-utama","text":"Berikut adalah ringkasan endpoint utama yang tersedia:","title":"Endpoint Utama"},{"location":"backend_api_docs/#authentication","text":"POST /auth/login - Login pengguna POST /auth/register - Registrasi pengguna baru","title":"Authentication"},{"location":"backend_api_docs/#messages","text":"GET /messages/ - Mendapatkan daftar pesan POST /messages/ - Membuat pesan baru PUT /messages/{id} - Mengupdate pesan DELETE /messages/{id} - Menghapus pesan","title":"Messages"},{"location":"backend_api_docs/#groups","text":"GET /groups/ - Mendapatkan daftar grup POST /groups/ - Menambah grup baru PUT /groups/{id} - Mengupdate grup DELETE /groups/{id} - Menghapus grup","title":"Groups"},{"location":"backend_api_docs/#scheduler","text":"GET /scheduler/ - Mendapatkan daftar jadwal POST /scheduler/ - Membuat jadwal baru PUT /scheduler/{id} - Mengupdate jadwal DELETE /scheduler/{id} - Menghapus jadwal","title":"Scheduler"},{"location":"backend_api_docs/#blacklist","text":"GET /blacklist/ - Mendapatkan daftar blacklist POST /blacklist/ - Menambah ke blacklist DELETE /blacklist/{id} - Menghapus dari blacklist Untuk detail lengkap tentang parameter, response, dan contoh penggunaan, silakan akses dokumentasi Swagger UI atau Redoc yang disebutkan di atas.","title":"Blacklist"},{"location":"installation/","text":"Panduan Instalasi Panduan ini akan memandu Anda melalui proses instalasi dan setup proyek Telegram Automation. Persyaratan Sistem Pastikan sistem Anda memenuhi persyaratan berikut: Python 3.9+ Node.js 18+ npm atau yarn Git Langkah-langkah Instalasi Clone Repositori Buka terminal atau command prompt Anda dan jalankan perintah berikut untuk mengkloning repositori proyek: bash git clone https://github.com/dygje12/telegram-automation.git cd telegram-automation Setup Backend (FastAPI) Navigasi ke direktori backend dan instal dependensi Python: bash cd backend pip install -r requirements.txt Buat file .env di direktori backend dan tambahkan konfigurasi yang diperlukan (contoh): DATABASE_URL=\"sqlite:///./sql_app.db\" SECRET_KEY=\"your-super-secret-key\" ALGORITHM=\"HS256\" ACCESS_TOKEN_EXPIRE_MINUTES=30 Jalankan migrasi database: bash alembic upgrade head Jalankan aplikasi backend: bash uvicorn app.main:app --reload Backend akan berjalan di http://127.0.0.1:8000 secara default. Setup Frontend (React) Buka terminal baru, navigasi ke direktori frontend dan instal dependensi Node.js: ```bash cd ../frontend npm install atau yarn install ``` Buat file .env di direktori frontend dan tambahkan konfigurasi yang diperlukan (contoh): REACT_APP_API_URL=http://127.0.0.1:8000 Jalankan aplikasi frontend: ```bash npm start atau yarn start ``` Frontend akan berjalan di http://localhost:3000 secara default. Setelah semua langkah ini selesai, aplikasi Telegram Automation seharusnya sudah berjalan dan dapat diakses melalui browser Anda.","title":"Installation"},{"location":"installation/#panduan-instalasi","text":"Panduan ini akan memandu Anda melalui proses instalasi dan setup proyek Telegram Automation.","title":"Panduan Instalasi"},{"location":"installation/#persyaratan-sistem","text":"Pastikan sistem Anda memenuhi persyaratan berikut: Python 3.9+ Node.js 18+ npm atau yarn Git","title":"Persyaratan Sistem"},{"location":"installation/#langkah-langkah-instalasi","text":"Clone Repositori Buka terminal atau command prompt Anda dan jalankan perintah berikut untuk mengkloning repositori proyek: bash git clone https://github.com/dygje12/telegram-automation.git cd telegram-automation Setup Backend (FastAPI) Navigasi ke direktori backend dan instal dependensi Python: bash cd backend pip install -r requirements.txt Buat file .env di direktori backend dan tambahkan konfigurasi yang diperlukan (contoh): DATABASE_URL=\"sqlite:///./sql_app.db\" SECRET_KEY=\"your-super-secret-key\" ALGORITHM=\"HS256\" ACCESS_TOKEN_EXPIRE_MINUTES=30 Jalankan migrasi database: bash alembic upgrade head Jalankan aplikasi backend: bash uvicorn app.main:app --reload Backend akan berjalan di http://127.0.0.1:8000 secara default. Setup Frontend (React) Buka terminal baru, navigasi ke direktori frontend dan instal dependensi Node.js: ```bash cd ../frontend npm install","title":"Langkah-langkah Instalasi"},{"location":"installation/#atau","text":"","title":"atau"},{"location":"installation/#yarn-install","text":"``` Buat file .env di direktori frontend dan tambahkan konfigurasi yang diperlukan (contoh): REACT_APP_API_URL=http://127.0.0.1:8000 Jalankan aplikasi frontend: ```bash npm start","title":"yarn install"},{"location":"installation/#atau_1","text":"","title":"atau"},{"location":"installation/#yarn-start","text":"``` Frontend akan berjalan di http://localhost:3000 secara default. Setelah semua langkah ini selesai, aplikasi Telegram Automation seharusnya sudah berjalan dan dapat diakses melalui browser Anda.","title":"yarn start"},{"location":"usage/","text":"Panduan Penggunaan Panduan ini akan menjelaskan cara menggunakan aplikasi Telegram Automation untuk mengirim pesan otomatis ke grup-grup Telegram. Login ke Aplikasi Buka browser dan akses http://localhost:3000 Masukkan kredensial login Anda Klik tombol \"Login\" untuk masuk ke dashboard Mengelola Pesan Membuat Pesan Baru Navigasi ke halaman \"Messages\" di dashboard Klik tombol \"Add New Message\" Masukkan konten pesan yang ingin Anda kirim Klik \"Save\" untuk menyimpan pesan Mengedit Pesan Di halaman \"Messages\", klik tombol \"Edit\" pada pesan yang ingin diubah Ubah konten pesan sesuai kebutuhan Klik \"Save\" untuk menyimpan perubahan Menghapus Pesan Di halaman \"Messages\", klik tombol \"Delete\" pada pesan yang ingin dihapus Konfirmasi penghapusan dengan mengklik \"Yes\" Mengelola Grup Menambah Grup Baru Navigasi ke halaman \"Groups\" di dashboard Klik tombol \"Add New Group\" Masukkan informasi grup (nama, ID grup Telegram, dll.) Klik \"Save\" untuk menyimpan grup Mengedit Grup Di halaman \"Groups\", klik tombol \"Edit\" pada grup yang ingin diubah Ubah informasi grup sesuai kebutuhan Klik \"Save\" untuk menyimpan perubahan Menghapus Grup Di halaman \"Groups\", klik tombol \"Delete\" pada grup yang ingin dihapus Konfirmasi penghapusan dengan mengklik \"Yes\" Penjadwalan Pesan Membuat Jadwal Baru Navigasi ke halaman \"Scheduler\" di dashboard Klik tombol \"Create New Schedule\" Pilih pesan yang ingin dijadwalkan Pilih grup-grup target Atur waktu dan frekuensi pengiriman Klik \"Save\" untuk menyimpan jadwal Mengelola Jadwal Di halaman \"Scheduler\", Anda dapat melihat semua jadwal yang aktif Gunakan tombol \"Edit\" untuk mengubah jadwal Gunakan tombol \"Delete\" untuk menghapus jadwal Gunakan toggle \"Active/Inactive\" untuk mengaktifkan atau menonaktifkan jadwal Mengelola Blacklist Menambah Grup ke Blacklist Navigasi ke halaman \"Blacklist\" di dashboard Klik tombol \"Add to Blacklist\" Pilih grup yang ingin ditambahkan ke blacklist Klik \"Save\" untuk menyimpan Grup yang ada di blacklist tidak akan menerima pesan otomatis meskipun termasuk dalam jadwal pengiriman. Tips Penggunaan Pastikan untuk menguji pesan Anda terlebih dahulu sebelum menjadwalkan pengiriman massal Gunakan fitur blacklist untuk mengecualikan grup-grup tertentu dari pengiriman otomatis Periksa log aktivitas secara berkala untuk memastikan pesan terkirim dengan baik Jangan lupa untuk memperbarui token bot Telegram jika diperlukan","title":"Usage"},{"location":"usage/#panduan-penggunaan","text":"Panduan ini akan menjelaskan cara menggunakan aplikasi Telegram Automation untuk mengirim pesan otomatis ke grup-grup Telegram.","title":"Panduan Penggunaan"},{"location":"usage/#login-ke-aplikasi","text":"Buka browser dan akses http://localhost:3000 Masukkan kredensial login Anda Klik tombol \"Login\" untuk masuk ke dashboard","title":"Login ke Aplikasi"},{"location":"usage/#mengelola-pesan","text":"","title":"Mengelola Pesan"},{"location":"usage/#membuat-pesan-baru","text":"Navigasi ke halaman \"Messages\" di dashboard Klik tombol \"Add New Message\" Masukkan konten pesan yang ingin Anda kirim Klik \"Save\" untuk menyimpan pesan","title":"Membuat Pesan Baru"},{"location":"usage/#mengedit-pesan","text":"Di halaman \"Messages\", klik tombol \"Edit\" pada pesan yang ingin diubah Ubah konten pesan sesuai kebutuhan Klik \"Save\" untuk menyimpan perubahan","title":"Mengedit Pesan"},{"location":"usage/#menghapus-pesan","text":"Di halaman \"Messages\", klik tombol \"Delete\" pada pesan yang ingin dihapus Konfirmasi penghapusan dengan mengklik \"Yes\"","title":"Menghapus Pesan"},{"location":"usage/#mengelola-grup","text":"","title":"Mengelola Grup"},{"location":"usage/#menambah-grup-baru","text":"Navigasi ke halaman \"Groups\" di dashboard Klik tombol \"Add New Group\" Masukkan informasi grup (nama, ID grup Telegram, dll.) Klik \"Save\" untuk menyimpan grup","title":"Menambah Grup Baru"},{"location":"usage/#mengedit-grup","text":"Di halaman \"Groups\", klik tombol \"Edit\" pada grup yang ingin diubah Ubah informasi grup sesuai kebutuhan Klik \"Save\" untuk menyimpan perubahan","title":"Mengedit Grup"},{"location":"usage/#menghapus-grup","text":"Di halaman \"Groups\", klik tombol \"Delete\" pada grup yang ingin dihapus Konfirmasi penghapusan dengan mengklik \"Yes\"","title":"Menghapus Grup"},{"location":"usage/#penjadwalan-pesan","text":"","title":"Penjadwalan Pesan"},{"location":"usage/#membuat-jadwal-baru","text":"Navigasi ke halaman \"Scheduler\" di dashboard Klik tombol \"Create New Schedule\" Pilih pesan yang ingin dijadwalkan Pilih grup-grup target Atur waktu dan frekuensi pengiriman Klik \"Save\" untuk menyimpan jadwal","title":"Membuat Jadwal Baru"},{"location":"usage/#mengelola-jadwal","text":"Di halaman \"Scheduler\", Anda dapat melihat semua jadwal yang aktif Gunakan tombol \"Edit\" untuk mengubah jadwal Gunakan tombol \"Delete\" untuk menghapus jadwal Gunakan toggle \"Active/Inactive\" untuk mengaktifkan atau menonaktifkan jadwal","title":"Mengelola Jadwal"},{"location":"usage/#mengelola-blacklist","text":"","title":"Mengelola Blacklist"},{"location":"usage/#menambah-grup-ke-blacklist","text":"Navigasi ke halaman \"Blacklist\" di dashboard Klik tombol \"Add to Blacklist\" Pilih grup yang ingin ditambahkan ke blacklist Klik \"Save\" untuk menyimpan Grup yang ada di blacklist tidak akan menerima pesan otomatis meskipun termasuk dalam jadwal pengiriman.","title":"Menambah Grup ke Blacklist"},{"location":"usage/#tips-penggunaan","text":"Pastikan untuk menguji pesan Anda terlebih dahulu sebelum menjadwalkan pengiriman massal Gunakan fitur blacklist untuk mengecualikan grup-grup tertentu dari pengiriman otomatis Periksa log aktivitas secara berkala untuk memastikan pesan terkirim dengan baik Jangan lupa untuk memperbarui token bot Telegram jika diperlukan","title":"Tips Penggunaan"}]}