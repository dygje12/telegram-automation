name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/ci-backend.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/ci-backend.yml'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -r requirements/dev.txt

    - name: Lint with black
      run: |
        cd backend
        black --check app/

    - name: Sort imports with isort
      run: |
        cd backend
        isort --check-only app/

    - name: Type check with mypy
      run: |
        cd backend
        mypy app/

    - name: Lint with flake8
      run: |
        cd backend
        flake8 app/

    - name: Run tests with pytest
      run: |
        cd backend
        python -m pytest app/tests/ --cov=app --cov-report=term-missing --cov-report=xml --cov-fail-under=80

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage
        fail_ci_if_error: true

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Bandit security scan
      run: |
        pip install bandit
        cd backend
        bandit -r app/ -f json -o bandit-report.json || true

    - name: Upload Bandit scan results
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: backend/bandit-report.json

  build-docker:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -f infra/docker/Dockerfile.backend -t telegram-automation-backend:test .

    - name: Test Docker image
      run: |
        docker run --rm -d --name test-backend -p 8000:8000 telegram-automation-backend:test
        sleep 10
        curl -f http://localhost:8000/health || exit 1
        docker stop test-backend

